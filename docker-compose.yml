# Это версия docker-compose.
version: '3.1'

#services: говорит о том, что все следующие строки после этого (будут сдвинуты) — относятся к сервисам, которые мы настраиваем.
services:
  # java-приложение под названием mtb. И уже под ним будут все его настройки.
  mtb:
    # Это значит, что перед запуском приложения мы ожидаем, что запустится база данных.
    depends_on:
      - mtb-db
    # build: context: . говорит о том, что мы будем искать Dockerfile в той же директории, что и docker-compose.yml.
    build:
      context: .
    # Cекция environment: отвечает за то, чтобы мы передали в Dockerfile необходимые переменные среды (environment variables).
    # Как раз то, что нам и нужно. Поэтому ниже мы переменные и передаем. Их docker-compose будет искать в переменных операционной среды сервера. Добавим их в баш скрипте.
    environment:
      BOT_NAME: ${BOT_NAME}
      BOT_TOKEN: ${BOT_TOKEN}
      BOT_DB_USERNAME: ${BOT_DB_USERNAME}
      BOT_DB_PASSWORD: ${BOT_DB_PASSWORD}
    restart: always
  # настройка работы с базой данных
  mtb-db:
    image: mysql:5.7
    restart: always
    environment:
      MYSQL_DATABASE: 'dev_mtb_db'
      # So you don't have to use root, but you can if you like
      MYSQL_USER: 'dev_mtb_db_user'
      # You can use whatever password you like
      MYSQL_PASSWORD: 'dev_mtb_db_password'
      # Password for root access
      MYSQL_ROOT_PASSWORD: 'root'
    ports:
      # <Port exposed> : < MySQL Port running inside container>
      - '3306:3306'